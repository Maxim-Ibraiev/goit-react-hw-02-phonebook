{"version":3,"sources":["ContactForm/ContactForm.jsx","ContactList/ContactItem.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App/App.jsx","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","state","props","onSetContacts","reset","this","onSubmit","type","onChange","Component","ContactItem","contact","filter","onDelateContacts","id","toLowerCase","includes","onClick","ContactList","contacts","map","Filter","autoComplete","defaultProps","App","handleFilter","prevState","find","alert","uuIdv4","updatedContacts","handleSetContacts","bind","handleDelateContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcd087ec.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      number: \"\",\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    onSetContacts: PropTypes.func,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSetContacts(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...this.state, ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ContactItem({ contact, filter, onDelateContacts }) {\r\n  const { id, name, number } = contact;\r\n\r\n  return (\r\n    <>\r\n      {name.toLowerCase().includes(filter.toLowerCase()) && (\r\n        <>\r\n          <li>{`${name}: ${number}`} </li>\r\n          <button onClick={() => onDelateContacts(id)}>Delate</button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.defaultProps = {\r\n  filter: \"\",\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object,\r\n  filter: PropTypes.string,\r\n  onDelateContacts: PropTypes.func,\r\n};\r\n","import ContactItem from \"./ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ contacts, filter, onDelateContacts }) {\r\n  return (\r\n    <>\r\n      {contacts[0] && (\r\n        <ul>\r\n          {contacts.map((contact) => (\r\n            <ContactItem\r\n              key={contact.id}\r\n              contact={contact}\r\n              filter={filter}\r\n              onDelateContacts={onDelateContacts}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.defaultProps = {\r\n  filter: \"\",\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  onDelateContacts: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          name=\"filter\"\r\n          autoComplete=\"off\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filter: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { v4 as uuIdv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  handleSetContacts(name, number) {\n    this.setState((prevState) => {\n      const { contacts } = prevState;\n\n      if (contacts.find((contact) => contact.name === name))\n        return alert(`${name} is already in contacts`);\n\n      return { contacts: [...contacts, { id: uuIdv4(), name, number }] };\n    });\n  }\n\n  handleDelateContacts(id) {\n    this.setState((prevState) => {\n      const { contacts } = prevState;\n      const updatedContacts = contacts.filter((contact) => contact.id !== id);\n\n      return { contacts: [...updatedContacts] };\n    });\n  }\n\n  handleFilter = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmit={this.handleSubmit}\n          onSetContacts={this.handleSetContacts.bind(this)}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          onDelateContacts={this.handleDelateContacts.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\n/* const sampleData = [\n  {\n    id: \"animal\",\n    parent: null,\n  },\n  {\n    id: \"home\",\n    parent: \"animal\",\n  },\n  {\n    id: \"dog\",\n    parent: \"home\",\n  },\n  {\n    id: \"labrador\",\n    parent: \"dog\",\n  },\n  {\n    id: \"haskey\",\n    parent: \"dog\",\n  },\n  {\n    id: \"cat\",\n    parent: \"home\",\n  },\n  {\n    id: \"lalya\",\n    parent: \"cat\",\n  },\n];\n\nfunction createTree(arr) {\n  const firstRoot = arr.find((item) => !item.parent);\n  const children = (item) => \n  // const three = \n} */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}